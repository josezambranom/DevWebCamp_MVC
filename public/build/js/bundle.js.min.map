{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","ev","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","error","console","log","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n    if(horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        let busqueda = {\r\n            // El '+' le indica que ese string debe ser int\r\n            categoria_id: +categoria.value ?? '', \r\n            dia: +inputHiddenDia.value ?? ''\r\n        }\r\n\r\n        if(!Object.values(busqueda).includes('')){\r\n            (async() => {\r\n                await buscarEventos();\r\n                // Resaltar la hora actual\r\n                const id = inputHiddenHora.value;\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n        }\r\n\r\n        function terminoBusqueda(ev) {\r\n            busqueda[ev.target.name] = ev.target.value;\r\n            \r\n            // Reiniciar los campos ocultos y el selecctor de hora\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) return;            \r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const url = `/api/eventos-horario?dia_id=${busqueda.dia}&categoria_id=${busqueda.categoria_id}`;\r\n            try {\r\n                const resultado = await fetch(url);\r\n                const eventos = await resultado.json();\r\n                obtenerHorasDisponibles(eventos);\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n            \r\n            // Comprobar horas disponibles y quitar la variable deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(ev) {\r\n            // Deshabilitar la hora previa si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            ev.target.classList.add('horas__hora--seleccionada');\r\n            inputHiddenHora.value = ev.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto de dÃ­a\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value) {\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                // Insertar en el Html\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${ponente.nombre} ${ponente.apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                formatearPonentes(resultado);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            try {\r\n                const respuesta = await fetch(url);\r\n                const resultado = await respuesta.json();\r\n                return resultado;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            });\r\n        }\r\n\r\n        function buscarPonentes(ev) {\r\n            const busqueda = ev.target.value;\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente;\r\n                    }\r\n                });\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // AÃ±adir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                });\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay resultados para tu bÃºsqueda';\r\n\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(ev) {\r\n            const ponente = ev.target;\r\n\r\n            // Remover clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        //Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios del input\r\n        tagsInput.addEventListener('keypress', guardarTab);\r\n\r\n        function guardarTab(ev) {\r\n            if(ev.keyCode === 44) {\r\n                if(ev.target.value.trim() === '' || ev.target.value < 1) return;\r\n                ev.preventDefault();\r\n                tags = [...tags, ev.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(ev) {\r\n            ev.target.remove();\r\n            tags = tags.filter(tag => tag !== ev.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n\r\n})();"]}